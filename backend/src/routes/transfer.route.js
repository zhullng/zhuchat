import express from "express";
import { 
  createTransfer,          // Correto: era makeTransfer 
  getTransferHistory, 
  transferByQRCode,        // Adiciona esta funÃ§Ã£o do controller
  generateUserQRCode       // Adiciona esta funÃ§Ã£o do controller
} from "../controllers/transfer.controller.js";
import { protectRoute } from "../middleware/auth.middleware.js"; // Middleware de autenticaÃ§Ã£o

const router = express.Router();

// ğŸ”¹ Rota para fazer uma transferÃªncia por email
router.post("/transfer", protectRoute, createTransfer);

// ğŸ”¹ Rota para transferÃªncia via QR Code
router.post("/transfer/qr", protectRoute, transferByQRCode);

// ğŸ”¹ Rota para gerar QR Code para o usuÃ¡rio
router.get("/qrcode", protectRoute, generateUserQRCode);

// ğŸ”¹ Rota para buscar o histÃ³rico de transferÃªncias de um usuÃ¡rio
router.get("/history", protectRoute, getTransferHistory);

/* 
  NOTA: As funÃ§Ãµes depositMoney e withdrawMoney nÃ£o existem no controller de transferÃªncia.
  Se vocÃª precisa delas, vocÃª deve:
  1. Criar um controller separado (ex: wallet.controller.js) com essas funÃ§Ãµes
  2. ImportÃ¡-las desse controller
  3. Ou adicionar essas funcionalidades ao transfer.controller.js existente
*/

export default router;